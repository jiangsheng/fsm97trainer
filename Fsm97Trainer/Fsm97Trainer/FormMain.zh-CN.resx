<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="checkBoxMaxForm.Text" xml:space="preserve">
    <value>满状态</value>
  </data>
  <data name="checkBoxMaxMorale.Text" xml:space="preserve">
    <value>满士气</value>
  </data>
  <data name="checkBoxMaxEnergy.Text" xml:space="preserve">
    <value>满体力</value>
  </data>
  <data name="buttonBoostYouthPlayer.Text" xml:space="preserve">
    <value>改善新人数据</value>
  </data>
  <data name="buttonImproveAllPlayersBy1.Text" xml:space="preserve">
    <value>所有球员数据+1</value>
  </data>
  <data name="buttonResetDate.Text" xml:space="preserve">
    <value>重设日期至</value>
  </data>
  <data name="buttonImportPlayerData.Text" xml:space="preserve">
    <value>导入球员数据</value>
  </data>
  <data name="buttonExportPlayerData.Text" xml:space="preserve">
    <value>导出球员数据</value>
  </data>
  <data name="buttonPastePlayerData.Text" xml:space="preserve">
    <value>粘贴球员数据</value>
  </data>
  <data name="buttonCopyPlayerData.Text" xml:space="preserve">
    <value>复制球员数据</value>
  </data>
  <data name="buttonRotateByEnergy.Text" xml:space="preserve">
    <value>体力优先轮换</value>
  </data>
  <data name="buttonRotateByStatistics.Text" xml:space="preserve">
    <value>统计优先轮换</value>
  </data>
  <data name="buttonUpdateNewSpawn.Text" xml:space="preserve">
    <value>在线更新重生球员名</value>
  </data>
  <data name="buttonUpdateNewSpawn.ToolTip" xml:space="preserve">
    <value>可以执行多次，每次不同类别</value>
  </data>
  <data name="labelCategory.Text" xml:space="preserve">
    <value>分类地址</value>
  </data>
  <data name="buttonAutoPosition.Text" xml:space="preserve">
    <value>自适应位置</value>
  </data>
  <data name="buttonSaveCurrentFormation.Text" xml:space="preserve">
    <value>保存当前阵型</value>
  </data>
  <data name="checkBoxAutoPositionWithCurrentFormation.Text" xml:space="preserve">
    <value>自适应位置使用当前保存阵型</value>
  </data>
  <data name="checkBoxNoAbsense.Text" xml:space="preserve">
    <value>球员总是可用</value>
  </data>
  <data name="checkBoxContractAutoRenew.Text" xml:space="preserve">
    <value>自动续约</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="checkBoxMaxStrength.Dock" type="System.Windows.Forms.DockStyle, System.Windows.Forms">
    <value>Fill</value>
  </data>
  <data name="checkBoxMaxStrength.Text" xml:space="preserve">
    <value>力量最大</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBoxMaxStrength.TextAlign" type="System.Drawing.ContentAlignment, System.Drawing">
    <value>MiddleCenter</value>
  </data>
  <data name="checkBoxAutoTrain.Text" xml:space="preserve">
    <value>自动训练</value>
  </data>
  <data name="checkBoxConvertToGK.Dock" type="System.Windows.Forms.DockStyle, System.Windows.Forms">
    <value>Fill</value>
  </data>
  <data name="checkBoxConvertToGK.Text" xml:space="preserve">
    <value>守门员训练法</value>
  </data>
  <data name="checkBoxConvertToGK.TextAlign" type="System.Drawing.ContentAlignment, System.Drawing">
    <value>MiddleCenter</value>
  </data>
  <data name="checkBoxConvertToGK.ToolTip" xml:space="preserve">
    <value>替补转为守门员可减少训练受伤</value>
  </data>
  <data name="checkBoxNoAlternativeTraining.Text" xml:space="preserve">
    <value>不转练</value>
  </data>
  <data name="buttonForceExit.Text" xml:space="preserve">
    <value>强行退出游戏</value>
  </data>
  <data name="buttonForceExit.ToolTip" xml:space="preserve">
    <value>如出现40号球员bug时，会出现随机事件直到被解雇删档</value>
  </data>
  <data name="comboBoxLanguage.Items" xml:space="preserve">
    <value />
  </data>
  <data name="comboBoxLanguage.Items1" xml:space="preserve">
    <value />
  </data>
  <data name="openFileDialog1.Title" xml:space="preserve">
    <value>选择球员数据保存路径</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>FSM97 球探工具</value>
  </data>
</root>